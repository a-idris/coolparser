    PROGRAM -> CLASS ; PROGRAM_REST                                     
    
    PROGRAM_REST -> PROGRAM
                |   eps
    
    CLASS -> class type_id CLASS_TYPE { FEATURE_LIST } ;
    
    CLASS_TYPE -> inherits type_id 
            | eps
    
    FEATURE_LIST -> FEATURE ; FEATURE_LIST 
                | eps
    
    FEATURE -> object_id FEATURE_REST
    
    FEATURE_REST -> ( ARGS_LIST ) : type { EXPR }
                |   : type OPT_EXPR_ASSIGNMENT 
    
    ARGSLIST -> ARGSLIST' 
            | eps    
    
    ARGSLIST' -> FORMAL ARGSLIST''
    
    ARGSLIST'' -> , FORMAL ARGSLIST'' 
                | eps
    
    OPT_EXPR_ASSIGNMENT -> EXPR_ASSIGNMENT 
                        | eps
    
    EXPR_ASSIGNMENT -> <- EXPR
    
    FORMAL -> object_id : type_id
        
    EXPR -> object_id OBJECT_ID_OP 
            | if EXPR then EXPR else EXPR fi 
            | while EXPR loop EXPR pool 
            | { EXPR_LIST } 
            | let LET_ARGS in EXPR 
            | case EXPR of CASE_ARGS esac 
            | new type_id 
            | ASSIGNMENT_EXPR
            
    OBJECT_ID_OP -> ( EXPR_ARGS ) 
                |   <- ASSIGNMENT_EXPR
            
    ASSIGNMENT_EXPR -> not BOOLEAN_COMPLEMENT_EXPR 
                    | BOOLEAN_COMPLEMENT_EXPR

    BOOLEAN_COMPLEMENT_EXPR -> COMPARISON_EXPR COMPARISON_OP
    
    COMPARISON_OP -> <= COMPARISON_EXPR COMPARISON_OP 
                  |  < COMPARISON_EXPR COMPARISON_OP 
                  |  = COMPARISON_EXPR COMPARISON_OP
                  |  eps
                    
    COMPARISON_EXPR -> ADD_EXPR ADD_OP
    
    ADD_OP -> + ADD_EXPR ADD_OP  
            | - ADD_EXPR ADD_OP
            | eps 
    
    ADD_EXPR -> MULT_EXPR MULT_OP
    
    MULT_OP -> * MULT_EXPR MULT_OP  
             | / MULT_EXPR MULT_OP
             | eps                 
    
    MULTOP_EXPR -> isvoid CHECKVOID_EXPR 
                |  CHECKVOID_EXPR
    
    CHECKVOID_EXPR -> ~ INTEGER_COMPLEMENT_EXPR 
                    | INTEGER_COMPLEMENT_EXPR
    
    INTEGER_COMPLEMENT_EXPR -> DISPATCH_TYPE_EXPR DISPATCH_TYPE_OP
    
    DISPATCH_TYPE_OP -> @ type_id 
                      | eps
                        
    DISPATCH_TYPE_EXPR -> DISPATCH_EXPR DISPATCH_OP
    
    DISPATCH_OP -> . object_id ( EXPR_ARGS )
                |  eps
    
    DISPATCH_EXPR ->  CONSTANT 
                    | ID 
                    | ( EXPR )
    
    CONSTANT -> integer 
            | string 
            | true 
            | false
    
    ID -> object_id
    
    EXPR_ARGS -> EXPR_ARGS' 
            | eps
    
    EXPR_ARGS' -> EXPR EXPR_ARGS''
    
    EXPR_ARGS'' -> , EXPR EXPR_ARGS'' 
                | eps
    
    EXPR_LIST -> EXPR ; MORE_EXPRs
    
    MORE_EXPRS -> EXPR_LIST
                | eps  
    
    LET_ARGS ->  LET_ARG LET_ARGS'  
    
    LET_ARGS' -> , LET_ARG LET_ARGS'                 
                | eps                                 
    
    LET_ARG -> object_id : type_id OPT_EXPR_ASSIGNMENT 
    
    CASE_ARGS -> CASE_ARG MORE_CASE_ARGS
    
    MORE_CASE_ARGS -> CASE_ARGS 
                    | eps
    
    CASE_ARG -> object_id : type_id => EXPR ;        